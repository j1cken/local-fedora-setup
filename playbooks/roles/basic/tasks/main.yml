---
- name: update installed packages
  dnf:
    name: "*"
    state: latest

- name: install basic packages
  dnf: 
    state: present
    name: 
      - xfce4-terminal
      - thunar
      - zsh
      - git
      - keepassxc
      # - libselinux-python
      - virt-manager
      - libvirt-daemon-config-network
      - strace
      - nmap
      - screen
      - libvirt-client
      - feh
#      - xcompmgr
      - xbacklight
      - pulseaudio
      - firewall-config
      - tuned
      - lm_sensors
      - acpi
      - sysstat
      # - nitrokey-app
      - p7zip
      - powertop
      - lsyncd
      - vim-enhanced
      - tcpdump
      - tlp
      - chromium
      - rxvt-unicode
      - golang
      - dep
      - krb5-workstation
      - hexchat
      - minicom
      - systemtap
      - pantheon-files
      - lightdm
      - java-11-openjdk-devel
      - overpass-fonts
      - powerline-fonts
      - nvme-cli
      # - obs-studio
      - youtube-dl
      # - openshot
      - bat
      # - bolt
      # - python2-psutils #fuer bumblebee-status
      # - python2-netifaces #fuer bumblebee-status

- name: refresh fonts cache
  debug: 
    msg: "sudo fc-cache -fv"

# sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
# sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
- name: import M$ vscode RPM key
  rpm_key:
    state: present
    key: https://packages.microsoft.com/keys/microsoft.asc

- name: set vscode repo def filepath
  set_fact: vscode_repo_def=/etc/yum.repos.d/vscode.repo

- name: Check that vscode repo def file exists
  stat:
    path: "{{ vscode_repo_def }}"
  register: vscode

- name: Create vscode repo def file
  file:
    path: "{{ vscode_repo_def }}"
    state: touch
  when: vscode.stat.exists == False

- name: create Yum repo definition
  blockinfile:
    path: "{{ vscode_repo_def }}"
    block: |
      [code]
      name=Visual Studio Code
      baseurl=https://packages.microsoft.com/yumrepos/vscode
      enabled=1
      gpgcheck=1
      gpgkey=https://packages.microsoft.com/keys/microsoft.asc

- name: enable testing kernels
  debug: 
    msg: "includepkgs=kernel* in updates-testing"

- name: install Visual Studio Code
  dnf: name=code state=present

# - name: check for atom packages
#   dnf: name=atom state=present
#   register: atom_installed
#   ignore_errors: True

# - name: install atom
#   dnf: name=https://github.com/atom/atom/releases/download/v{{atom_version}}/atom.x86_64.rpm state=present
#   when: atom_installed|failed

- name: start basic services
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - tuned
    # - libvirtd

      #- name: disable gdm
      #  service: name={{ item }} state=stopped enabled=no
      #  with_items:
      #    - gdm
      #
      #- name: enable lightgdm
      #  service: name={{ item }} state=started enabled=yes
      #  with_items:
      #    - lightdm
      #
# - name: enable copr repo for i3-gaps
#   debug: 
#     msg: "sudo dnf copr enable gregw/i3desktop"

# - name: enable copr repo for polybar
#   debug: 
#     msg: "dnf copr enable tjuberg/i3-desktop"

# - name: create firewalld rules for Hetzner OpenShift
#   debug: 
#     msg: "create trusted zone"

# - name: create virsh net default for Hetzner OpenShift
#   debug: 
#     msg: "need DNS info"


# -rw-r--r--. 1 root root  67 Feb 15 13:56 route-enp0s31f6
# -rw-r--r--. 1 root root  67 Feb 15 13:57 route-enp12s0u1
# ╭─torben@localhost /etc/sysconfig/network-scripts  
# ╰─$ cat route-enp*
# ADDRESS0=192.168.178.0
# NETMASK0=255.255.255.0
# GATEWAY0=172.16.0.1
# 
# ADDRESS0=192.168.178.0
# NETMASK0=255.255.255.0
# GATEWAY0=172.16.0.1
# 
- name: create static route for FritzBox in case of vpn
  debug: 
    msg: "sudo ip r add 192.168.178.0/24 via 172.16.10.1"

- name: install oh my zsh
  become: no
  shell: cd /home/torben && sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  args:
    creates: /home/torben/.oh-my-zsh

# git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

- name: install xfce terminal theme
  debug:
    msg: "https://github.com/arcticicestudio/nord-xfce-terminal.git"
